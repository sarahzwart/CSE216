{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\nickm\\\\CSE-216\\\\cse216-2023fa-team-6\\\\web\\\\src\\\\Test-Features\\\\Home.tsx\";\nimport * as React from 'react';\n\n/**\r\n * We want everything to be strongly typed, so let's start by declaring a type\r\n * for the properties that our Hello component will use.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/**\r\n * Declare our component as a class, so that TypeScript can make sure the\r\n * properties are type-checked.\r\n */\nexport class Home extends React.Component {\n  /**\r\n   * The render function will return a JSX element.  In the jsx, we use the\r\n   * \"{}\" syntax to read fields of the Hello class, using \"one-way\" binding.\r\n   */\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome to the \", this.props.message, \"page\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"This is the webpage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hows it hanging there bucko\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to Margarittaville\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true);\n  }\n}\n/** This is how we declare default values for the properties */\nHome.defaultProps = {\n  message: \"Home\"\n};","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","Component","render","children","props","message","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps"],"sources":["C:/users/nickm/CSE-216/cse216-2023fa-team-6/web/src/Test-Features/Home.tsx"],"sourcesContent":["import * as React from 'react'\r\n\r\n/**\r\n * We want everything to be strongly typed, so let's start by declaring a type\r\n * for the properties that our Hello component will use.\r\n */\r\ntype HomeProps = {\r\n    /** The only property we will have is a message */\r\n    message: string;\r\n}\r\n\r\n/**\r\n * Declare our component as a class, so that TypeScript can make sure the\r\n * properties are type-checked.\r\n */\r\nexport class Home extends React.Component<HomeProps> {\r\n    /** This is how we declare default values for the properties */\r\n    static defaultProps = { message: \"Home\" };\r\n\r\n    /**\r\n     * The render function will return a JSX element.  In the jsx, we use the\r\n     * \"{}\" syntax to read fields of the Hello class, using \"one-way\" binding.\r\n     */\r\n    render() { return (\r\n                    <>\r\n                        <h1>Welcome to the {this.props.message}page</h1>\r\n                        <h4>This is the webpage</h4>\r\n                        <p>Hows it hanging there bucko</p>\r\n                        <p>Welcome to Margarittaville</p>\r\n                    </>\r\n            ); \r\n    }\r\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;;AAE9B;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AASA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,SAASL,KAAK,CAACM,SAAS,CAAY;EAIjD;AACJ;AACA;AACA;EACIC,MAAMA,CAAA,EAAG;IAAE,oBACKL,OAAA,CAAAE,SAAA;MAAAI,QAAA,gBACIN,OAAA;QAAAM,QAAA,GAAI,iBAAe,EAAC,IAAI,CAACC,KAAK,CAACC,OAAO,EAAC,MAAI;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDZ,OAAA;QAAAM,QAAA,EAAI;MAAmB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BZ,OAAA;QAAAM,QAAA,EAAG;MAA2B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClCZ,OAAA;QAAAM,QAAA,EAAG;MAA0B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,eACnC,CAAC;EAEnB;AACJ;AAhBI;AADST,IAAI,CAENU,YAAY,GAAG;EAAEL,OAAO,EAAE;AAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}