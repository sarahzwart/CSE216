{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\nickm\\\\CSE-216\\\\cse216-2023fa-team-6\\\\web\\\\src\\\\Test-Features\\\\Add_Edit.tsx\";\nimport * as React from 'react';\n\n/**\r\n * We want everything to be strongly typed, so let's start by declaring a type\r\n * for the properties that our Hello component will use.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * Declare our component as a class, so that TypeScript can make sure the\r\n * properties are type-checked.\r\n */\nexport class Add_Edit extends React.Component {\n  /**\r\n   * The render function will return a JSX element.  In the jsx, we use the\r\n   * \"{}\" syntax to read fields of the Hello class, using \"one-way\" binding.\r\n   */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add a New Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"newTitle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"newMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addButton\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addCancel\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"editElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit an Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"editTitle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"editMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"editCreated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          id: \"editId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"editButton\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"editCancel\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"showElements\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"All Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"showFormButton\",\n          children: \"Add Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"messageList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this);\n  }\n}\n/** This is how we declare default values for the properties */\nAdd_Edit.defaultProps = {\n  message: \"World\"\n};","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Add_Edit","Component","render","children","id","fileName","_jsxFileName","lineNumber","columnNumber","type","defaultProps","message"],"sources":["C:/users/nickm/CSE-216/cse216-2023fa-team-6/web/src/Test-Features/Add_Edit.tsx"],"sourcesContent":["import * as React from 'react'\r\n\r\n/**\r\n * We want everything to be strongly typed, so let's start by declaring a type\r\n * for the properties that our Hello component will use.\r\n */\r\ntype Add_EditProps = undefined;\r\n\r\n\r\n/**\r\n * Declare our component as a class, so that TypeScript can make sure the\r\n * properties are type-checked.\r\n */\r\nexport class Add_Edit extends React.Component<Add_EditProps> {\r\n    /** This is how we declare default values for the properties */\r\n    static defaultProps = { message: \"World\" };\r\n\r\n    /**\r\n     * The render function will return a JSX element.  In the jsx, we use the\r\n     * \"{}\" syntax to read fields of the Hello class, using \"one-way\" binding.\r\n     */\r\n    render() { return  (<div>\r\n                            <div id=\"addElement\">\r\n                                <h3>Add a New Entry</h3>\r\n                                <label>Title</label>\r\n                                <input type=\"text\" id=\"newTitle\" />\r\n                                <label>Message</label>\r\n                                <textarea id=\"newMessage\"></textarea>\r\n                                <button id=\"addButton\">Add</button>\r\n                                <button id=\"addCancel\">Cancel</button>\r\n                            </div>\r\n                            <div id=\"editElement\">\r\n                                <h3>Edit an Entry</h3>\r\n                                <label>Title</label>\r\n                                <input type=\"text\" id=\"editTitle\" />\r\n                                <label>Message</label>\r\n                                <textarea id=\"editMessage\"></textarea>\r\n                                <span id=\"editCreated\"></span>\r\n                                <input type=\"hidden\" id=\"editId\" />\r\n                                <button id=\"editButton\">Update</button>\r\n                                <button id=\"editCancel\">Cancel</button>\r\n                            </div>\r\n                            <div id=\"showElements\">\r\n                                <h3>All Messages</h3>\r\n                                <button id=\"showFormButton\">Add Message</button>\r\n                                <div id=\"messageList\"></div>\r\n                            </div>\r\n                        </div>\r\n                        );\r\n                }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}