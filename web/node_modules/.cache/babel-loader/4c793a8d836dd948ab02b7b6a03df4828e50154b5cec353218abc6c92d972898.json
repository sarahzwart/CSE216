{"ast":null,"code":"import _classCallCheck from\"C:/Users/nickm/CSE-216/cse216-2023fa-team-6/web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/nickm/CSE-216/cse216-2023fa-team-6/web/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/nickm/CSE-216/cse216-2023fa-team-6/web/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/nickm/CSE-216/cse216-2023fa-team-6/web/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import*as React from'react';/**\r\n * As with Hello.tsx, we want properties passed through the route to be strongly \r\n * typed, so we create a type to describe them.\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";/**\r\n * The Properties of this component will have a `match` field, which will give\r\n * us access to the UrlProps\r\n */export var Url=/*#__PURE__*/function(_React$Component){_inherits(Url,_React$Component);var _super=_createSuper(Url);function Url(){_classCallCheck(this,Url);return _super.apply(this,arguments);}_createClass(Url,[{key:\"render\",value:/** When we render this component, we print the argument from the URL */function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Url Property Example\"}),/*#__PURE__*/_jsx(\"p\",{children:\"This component can use the last part of the address as a variable by reading it from props.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"The argument from the Url is: \",this.props.match.params.num]})]});}}]);return Url;}(React.Component);","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Url","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","children","props","match","params","num","Component"],"sources":["C:/users/nickm/CSE-216/cse216-2023fa-team-6/web/src/Tutorial-Features/Url.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\n/**\r\n * As with Hello.tsx, we want properties passed through the route to be strongly \r\n * typed, so we create a type to describe them.\r\n */\r\ntype UrlProps = { num: string };\r\n\r\n/**\r\n * The Properties of this component will have a `match` field, which will give\r\n * us access to the UrlProps\r\n */\r\nexport class Url extends React.Component<RouteComponentProps<UrlProps>> {\r\n    /** When we render this component, we print the argument from the URL */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Url Property Example</h1>\r\n                <p>\r\n                    This component can use the last part of the address as a\r\n                    variable by reading it from props.\r\n                </p>\r\n                <p>The argument from the Url is: {this.props.match.params.num}</p>\r\n            </div>\r\n        );\r\n    }\r\n}"],"mappings":"ogBAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAG9B;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAMA;AACA;AACA;AACA,GACA,UAAa,CAAAC,GAAG,uBAAAC,gBAAA,EAAAC,SAAA,CAAAF,GAAA,CAAAC,gBAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,GAAA,WAAAA,IAAA,EAAAK,eAAA,MAAAL,GAAA,SAAAG,MAAA,CAAAG,KAAA,MAAAC,SAAA,GAAAC,YAAA,CAAAR,GAAA,GAAAS,GAAA,UAAAC,KAAA,CACZ,wEACA,SAAAC,OAAA,CAAS,CACL,mBACIZ,KAAA,QAAAa,QAAA,eACIf,IAAA,OAAAe,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7Bf,IAAA,MAAAe,QAAA,CAAG,6FAGH,CAAG,CAAC,cACJb,KAAA,MAAAa,QAAA,EAAG,gCAA8B,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,GAAG,EAAI,CAAC,EACjE,CAAC,CAEd,CAAC,WAAAhB,GAAA,GAboBL,KAAK,CAACsB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}