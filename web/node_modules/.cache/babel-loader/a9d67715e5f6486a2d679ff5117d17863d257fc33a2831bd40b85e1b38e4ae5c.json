{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\nickm\\\\CSE-216\\\\cse216-2023fa-team-6\\\\web\\\\src\\\\Tutorial-Features\\\\Net.tsx\";\nimport * as React from 'react';\n\n/** This component will fetch and display some data */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Net extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      /** The data we fetched */\n      data: [],\n      /** True if waiting on network */\n      waiting: true,\n      /** Error message, if any */\n      error: \"\",\n      /** For toggling button visibility */\n      showButton: true\n    };\n    /** Add one class to the array of data */\n    this.addClass = _e => {\n      this.setState({\n        data: [...this.state.data, \"CSE 440\"]\n      });\n      this.setState({\n        showButton: false\n      });\n    };\n  }\n  /** When the component mounts, fetch data */\n  componentDidMount() {\n    // NB: the error handling isn't perfect here\n    // NB: using \"no-cors\" is a hack for this demo\n    fetch('/public/courses.json', {\n      mode: \"no-cors\"\n    }).then(response => response.json()).then(response => {\n      this.setState({\n        data: response,\n        waiting: false,\n        error: \"\"\n      });\n    }).catch(error => this.setState({\n      waiting: false,\n      error: \"\" + error\n    }));\n  }\n  /** This render method will do some conditional rendering */\n  render() {\n    if (this.state.waiting) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }, this);else if (this.state.error !== \"\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }, this);\n    let button;\n    if (!this.state.waiting && this.state.showButton) button = /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.addClass,\n      children: \" Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 22\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.data.map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: d\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 47\n      }, this)), button]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n}\n;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Net","Component","constructor","args","state","data","waiting","error","showButton","addClass","_e","setState","componentDidMount","fetch","mode","then","response","json","catch","render","children","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","map","d"],"sources":["C:/users/nickm/CSE-216/cse216-2023fa-team-6/web/src/Tutorial-Features/Net.tsx"],"sourcesContent":["import * as React from 'react'\r\n\r\n/** This component will fetch and display some data */\r\nexport class Net extends React.Component {\r\n    state = {\r\n        /** The data we fetched */\r\n        data: [] as string[],\r\n        /** True if waiting on network */\r\n        waiting: true,\r\n        /** Error message, if any */\r\n        error: \"\",\r\n        /** For toggling button visibility */\r\n        showButton: true\r\n    }\r\n\r\n    /** When the component mounts, fetch data */\r\n    componentDidMount() {\r\n        // NB: the error handling isn't perfect here\r\n        // NB: using \"no-cors\" is a hack for this demo\r\n        fetch('/public/courses.json', { mode: \"no-cors\" })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    data: response,\r\n                    waiting: false,\r\n                    error: \"\"\r\n                })\r\n            })\r\n            .catch(error => this.setState({\r\n                waiting: false,\r\n                error: \"\" + error\r\n            }));\r\n    }\r\n\r\n    /** Add one class to the array of data */\r\n    addClass = (_e: React.MouseEvent<HTMLButtonElement>) => {\r\n        this.setState({ data: [...this.state.data, \"CSE 440\"] });\r\n        this.setState({ showButton: false })\r\n    }\r\n\r\n    /** This render method will do some conditional rendering */\r\n    render () { \r\n        if (this.state.waiting)\r\n            return <div>Loading...</div>;\r\n        else if (this.state.error !== \"\")\r\n            return <div>{this.state.error}</div>;\r\n        let button: JSX.Element;\r\n        if (!this.state.waiting && this.state.showButton)\r\n            button = <button onClick={this.addClass}> Update</button>;\r\n        return <div>{this.state.data.map(d => <div key={d}>{d}</div>)}{button}</div>\r\n    }\r\n};"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,GAAG,SAASH,KAAK,CAACI,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACrCC,KAAK,GAAG;MACJ;MACAC,IAAI,EAAE,EAAc;MACpB;MACAC,OAAO,EAAE,IAAI;MACb;MACAC,KAAK,EAAE,EAAE;MACT;MACAC,UAAU,EAAE;IAChB,CAAC;IAqBD;IAAA,KACAC,QAAQ,GAAIC,EAAuC,IAAK;MACpD,IAAI,CAACC,QAAQ,CAAC;QAAEN,IAAI,EAAE,CAAC,GAAG,IAAI,CAACD,KAAK,CAACC,IAAI,EAAE,SAAS;MAAE,CAAC,CAAC;MACxD,IAAI,CAACM,QAAQ,CAAC;QAAEH,UAAU,EAAE;MAAM,CAAC,CAAC;IACxC,CAAC;EAAA;EAvBD;EACAI,iBAAiBA,CAAA,EAAG;IAChB;IACA;IACAC,KAAK,CAAC,sBAAsB,EAAE;MAAEC,IAAI,EAAE;IAAU,CAAC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACL,QAAQ,CAAC;QACVN,IAAI,EAAEW,QAAQ;QACdV,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACX,CAAC,CAAC;IACN,CAAC,CAAC,CACDW,KAAK,CAACX,KAAK,IAAI,IAAI,CAACI,QAAQ,CAAC;MAC1BL,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,EAAE,GAAGA;IAChB,CAAC,CAAC,CAAC;EACX;EAQA;EACAY,MAAMA,CAAA,EAAI;IACN,IAAI,IAAI,CAACf,KAAK,CAACE,OAAO,EAClB,oBAAOP,OAAA;MAAAqB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,KAC5B,IAAI,IAAI,CAACpB,KAAK,CAACG,KAAK,KAAK,EAAE,EAC5B,oBAAOR,OAAA;MAAAqB,QAAA,EAAM,IAAI,CAAChB,KAAK,CAACG;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;IACxC,IAAIC,MAAmB;IACvB,IAAI,CAAC,IAAI,CAACrB,KAAK,CAACE,OAAO,IAAI,IAAI,CAACF,KAAK,CAACI,UAAU,EAC5CiB,MAAM,gBAAG1B,OAAA;MAAQ2B,OAAO,EAAE,IAAI,CAACjB,QAAS;MAAAW,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;IAC7D,oBAAOzB,OAAA;MAAAqB,QAAA,GAAM,IAAI,CAAChB,KAAK,CAACC,IAAI,CAACsB,GAAG,CAACC,CAAC,iBAAI7B,OAAA;QAAAqB,QAAA,EAAcQ;MAAC,GAALA,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,CAAC,EAAEC,MAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAChF;AACJ;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}